ggplot(data, aes(x = year, y = value)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Simulated Data: AVI Measured every 3 year",
x = "Years",
y = "OR") +
theme_bw() +
#ylim(1, 2.2) +
scale_x_continuous(breaks = 1:20)
########## reevaluate every 4 years ##########
set.seed(123)  # Set seed for reproducibility
# Parameters
n_years <- 19
base_years <- seq(1, n_years, by = 3)
decline_years <- unlist(lapply(base_years[-length(base_years)], function(x) (x + 1):(x + 2)))
# Initialize dataset
data <- data.frame(year = 1:n_years, value = NA)
# Stochastic process for base years (zero slope)
stochastic_base <- rnorm(length(base_years), mean = 2, sd = 0.03)
data$value[base_years] <- stochastic_base
# Generate declining values
for (start in base_years[-length(base_years)]) {  # Skip the last base year to avoid out-of-bounds
# Generate declining values
decline_years <- (start + 1):(start + 2)
decline_value_1 <- data$value[start] - rnorm(1, 0.2, 0.03)
decline_value_2 <- decline_value_1 - rnorm(1, 0.2, 0.03)
data$value[decline_years] <- c(decline_value_1, decline_value_2)
}
# Ensure that all values are assigned (filling gaps with random values around the trend)
for (i in which(is.na(data$value))) {
data$value[i] <- rnorm(1, mean = mean(data$value, na.rm = TRUE), sd = 5)
}
print(data)
# Plot the longitudinal data
ggplot(data, aes(x = year, y = value)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Simulated Data: AVI Measured every 3 year",
x = "Years",
y = "OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:20)
set.seed(123)  # Set seed for reproducibility
# Parameters
n_years <- 19
base_years <- seq(1, n_years, by = 3)
decline_years <- unlist(lapply(base_years[-length(base_years)], function(x) (x + 1):(x + 2)))
# Initialize dataset
data <- data.frame(year = 1:n_years, value = NA)
# Stochastic process for base years (zero slope)
stochastic_base <- rnorm(length(base_years), mean = 2, sd = 0.03)
data$value[base_years] <- stochastic_base
# Generate declining values
for (start in base_years[-length(base_years)]) {  # Skip the last base year to avoid out-of-bounds
# Generate declining values
decline_years <- (start + 1):(start + 2)
decline_value_1 <- data$value[start] - rnorm(1, 0.2, 0.05)
decline_value_2 <- decline_value_1 - rnorm(1, 0.2, 0.05)
data$value[decline_years] <- c(decline_value_1, decline_value_2)
}
# Ensure that all values are assigned (filling gaps with random values around the trend)
for (i in which(is.na(data$value))) {
data$value[i] <- rnorm(1, mean = mean(data$value, na.rm = TRUE), sd = 5)
}
print(data)
# Plot the longitudinal data
ggplot(data, aes(x = year, y = value)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Simulated Data: AVI Measured every 3 year",
x = "Years",
y = "OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:20)
n_years <- 19
base_years <- seq(1, n_years, by = 3)
decline_years <- unlist(lapply(base_years[-length(base_years)], function(x) (x + 1):(x + 2)))
# Initialize dataset
data <- data.frame(year = 1:n_years, value = NA)
# Stochastic process for base years (zero slope)
stochastic_base <- rnorm(length(base_years), mean = 2, sd = 0.03)
data$value[base_years] <- stochastic_base
# Generate declining values
for (start in base_years[-length(base_years)]) {  # Skip the last base year to avoid out-of-bounds
# Generate declining values
decline_years <- (start + 1):(start + 2)
decline_value_1 <- data$value[start] - rnorm(1, 0.1, 0.05)
decline_value_2 <- decline_value_1 - rnorm(1, 0.1, 0.05)
data$value[decline_years] <- c(decline_value_1, decline_value_2)
}
# Ensure that all values are assigned (filling gaps with random values around the trend)
for (i in which(is.na(data$value))) {
data$value[i] <- rnorm(1, mean = mean(data$value, na.rm = TRUE), sd = 5)
}
print(data)
# Plot the longitudinal data
ggplot(data, aes(x = year, y = value)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Simulated Data: AVI Measured every 3 year",
x = "Years",
y = "OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:20)
View(data)
# Plot the longitudinal data
ggplot(data, aes(x = year, y = value)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Simulated Data: AVI Measured every 3 year",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:20)
seq(1, n_years, by = 1)
base_years <- seq(1, n_years, by = 2)
base_years
decline_years <- unlist(lapply(base_years[-length(base_years)], function(x) (x + 1):(x + 2)))
# Initialize dataset
data <- data.frame(year = 1:n_years, value = NA)
# Stochastic process for base years (zero slope)
stochastic_base <- rnorm(length(base_years), mean = 2, sd = 0.03)
data$value[base_years] <- stochastic_base
View(data)
# Generate declining values
for (start in base_years[-length(base_years)]) {  # Skip the last base year to avoid out-of-bounds
# Generate declining values
decline_years <- start + 1
decline_value_1 <- data$value[start] - rnorm(1, 0.1, 0.05)
data$value[decline_years] <- decline_value_1
}
# Plot the longitudinal data
ggplot(data, aes(x = year, y = value)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Simulated Data: AVI Measured every other year",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
# Combine into a data frame for easy plotting and analysis
data <- data.frame(year = seq(1,n), OR_measured_everyyear = y)
# Plot the or over time
ggplot(data, aes(x = year, y = OR_measured_everyyear)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Simulated Data: AVI Measured every year",
x = "Years",
y = "OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:20)  # Ensure all x-axis labels are shown
set.seed(123)  # Set seed for reproducibility
# Parameters
n_years <- 19
base_years <- seq(1, n_years, by = 3)
decline_years <- unlist(lapply(base_years[-length(base_years)], function(x) (x + 1):(x + 2)))
# # Initialize dataset
# data <- data.frame(year = 1:n_years, value = NA)
# Stochastic process for base years (zero slope)
stochastic_base <- rnorm(length(base_years), mean = 2, sd = 0.03)
data$OR_measured_every3year
data$OR_measured_every3year[base_years] <- stochastic_base
View(data)
set.seed(5124)
# Number of time points
n <- 19
# Generate OR values (dependent variable) with a stochastic process
# y = 2 + noise, where noise is normally distributed
y <- rnorm(n, mean = 2, sd = 0.03)
# Combine into a data frame for easy plotting and analysis
data <- data.frame(year = seq(1,n), OR_measured_everyyear = y)
# Plot the or over time
ggplot(data, aes(x = year, y = OR_measured_everyyear)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Simulated Data: AVI Measured every year",
x = "Years",
y = "OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:20)  # Ensure all x-axis labels are shown
########## reevaluate every 4 years ##########
set.seed(123)  # Set seed for reproducibility
# Parameters
n_years <- 19
base_years <- seq(1, n_years, by = 3)
decline_years <- unlist(lapply(base_years[-length(base_years)], function(x) (x + 1):(x + 2)))
# # Initialize dataset
# data <- data.frame(year = 1:n_years, value = NA)
# Stochastic process for base years (zero slope)
stochastic_base <- rnorm(length(base_years), mean = 2, sd = 0.03)
data$OR_measured_every3year
data$OR_measured_every3year[base_years] <- stochastic_base
# Generate declining values
for (start in base_years[-length(base_years)]) {  # Skip the last base year to avoid out-of-bounds
# Generate declining values
decline_years <- (start + 1):(start + 2)
decline_value_1 <- data$value[start] - rnorm(1, 0.1, 0.05)
decline_value_2 <- decline_value_1 - rnorm(1, 0.1, 0.05)
data$OR_measured_every3year[decline_years] <- c(decline_value_1, decline_value_2)
}
View(data)
# Parameters
n_years <- 19
base_years <- seq(1, n_years, by = 3)
decline_years <- unlist(lapply(base_years[-length(base_years)], function(x) (x + 1):(x + 2)))
# Stochastic process for base years (zero slope)
stochastic_base <- rnorm(length(base_years), mean = 2, sd = 0.03)
data$OR_measured_every3year <- NA
data$OR_measured_every3year[base_years] <- stochastic_base
View(data)
data$OR_measured_every3year[base_years] <- data$OR_measured_everyyear[base_years]
View(data)
base_years[-length(base_years)]
# Generate declining values
decline_years <- (start + 1):(start + 2)
decline_value_1 <- data$value[start] - rnorm(1, 0.1, 0.05)
decline_value_2 <- decline_value_1 - rnorm(1, 0.1, 0.05)
data$OR_measured_every3year[decline_years] <- c(decline_value_1, decline_value_2)
data$OR_measured_every3year[decline_years]
c(decline_value_1, decline_value_2)
# Generate declining values
for (start in base_years[-length(base_years)]) {  # Skip the last base year to avoid out-of-bounds
# Generate declining values
decline_years <- (start + 1):(start + 2)
decline_value_1 <- data$OR_measured_every3year[start] - rnorm(1, 0.1, 0.05)
decline_value_2 <- decline_value_1 - rnorm(1, 0.1, 0.05)
data$OR_measured_every3year[decline_years] <- c(decline_value_1, decline_value_2)
}
View(data)
# Plot the longitudinal data
ggplot(data, aes(x = year, y = OR_measured_every3year)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Simulated Data: AVI Measured every 3 year",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:20)
set.seed(123)  # Set seed for reproducibility
# Parameters
n_years <- 19
base_years <- seq(1, n_years, by = 2)
# # Initialize dataset
# data <- data.frame(year = 1:n_years, value = NA)
# Stochastic process for base years (zero slope)
# stochastic_base <- rnorm(length(base_years), mean = 2, sd = 0.03)
data$OR_measured_every2year <- NA
data$OR_measured_every2year[base_years] <- data$OR_measured_everyyear[base_years]
# Generate declining values
for (start in base_years[-length(base_years)]) {  # Skip the last base year to avoid out-of-bounds
# Generate declining values
decline_years <- start + 1
decline_value_1 <- data$OR_measured_every2year[start] - rnorm(1, 0.1, 0.05)
data$OR_measured_every2year[decline_years] <- decline_value_1
}
# Plot the longitudinal data
ggplot(data, aes(x = year, y = OR_measured_every2year)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Simulated Data: AVI Measured every other year",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
View(data)
long_df <- pivot_longer(data,
cols = starts_with("OR"),
names_to = "Measure_interval",
values_to = "OR")
long_df <- tidyr::pivot_longer(data,
cols = starts_with("OR"),
names_to = "Measure_interval",
values_to = "OR")
View(long_df)
ggplot(data, aes(x = year, y = OR, color = Measure_interval)) +
geom_line() +
geom_point() +
labs(title = "Simulated Data: Different AVI measurement intervals",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
ggplot(long_df, aes(x = year, y = OR, color = Measure_interval)) +
geom_line() +
geom_point() +
labs(title = "Simulated Data: Different AVI measurement intervals",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
levels(long_df$Measure_interval)
long_df <- tidyr::pivot_longer(data,
cols = starts_with("OR"),
names_to = "Measured_interval",
values_to = "OR")
table(long_df$Measured_interval)
long_df$Measured_interval <- factor(long_df$Measured_interval, levels = c("OR_measured_everyyear", "OR_measured_every2year", "OR_measured_every3year"))
levels(long_df$Measured_interval) <- c("AVI measured every year", "AVI measured every 2 years", "AVI measured every 3 years"))
levels(long_df$Measured_interval) <- c("AVI measured every year", "AVI measured every 2 years", "AVI measured every 3 years")
ggplot(long_df, aes(x = year, y = OR, color = Measured_interval)) +
geom_line() +
geom_point() +
labs(title = "Simulated Data: Different AVI measurement intervals",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
ggplot(long_df, aes(x = year, y = OR, color = Measured_interval)) +
geom_line() +
geom_point() +
labs(title = "Simulated Data: Different AVI measurement intervals",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
scale_color_manual(values = c("red", "black", "darkgrey")) +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
facet_wrap(~Measured_interval)
facet_wrap(~Measured_interval) +
ggplot(long_df, aes(x = year, y = OR)+#, color = Measured_interval)) +
ggplot(long_df, aes(x = year, y = OR)) +#, color = Measured_interval)) +
geom_line() +
geom_point() +
facet_wrap(~Measured_interval) +
labs(title = "Simulated Data: Different AVI measurement intervals",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
#scale_color_manual(values = c("red", "black", "darkgrey")) +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
ggplot(long_df, aes(x = year, y = OR)) +#, color = Measured_interval)) +
geom_line() +
geom_point() +
facet_wrap(~Measured_interval, ncol = 1) +
labs(title = "Simulated Data: Different AVI measurement intervals",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
#scale_color_manual(values = c("red", "black", "darkgrey")) +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
View(long_df)
# Combine into a data frame for easy plotting and analysis
data <- data.frame(year = seq(1,n), OR_measured_everyyear = y, measured = TRUE)
View(data)
# Combine into a data frame for easy plotting and analysis
data <- data.frame(year = seq(1,n), OR_measured_everyyear = y, measured_0 = TRUE)
########## reevaluate every year ##########
# Set seed for reproducibility
set.seed(5124)
# Number of time points
n <- 19
# Generate OR values (dependent variable) with a stochastic process
# y = 2 + noise, where noise is normally distributed
y <- rnorm(n, mean = 2, sd = 0.03)
# Combine into a data frame for easy plotting and analysis
data <- data.frame(year = seq(1,n), OR_measured_everyyear = y, measured_0 = TRUE)
# Plot the or over time
ggplot(data, aes(x = year, y = OR_measured_everyyear)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Simulated Data: AVI Measured every year",
x = "Years",
y = "OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:20)  # Ensure all x-axis labels are shown
########## reevaluate every 4 years ##########
set.seed(123)  # Set seed for reproducibility
# Parameters
n_years <- 19
base_years <- seq(1, n_years, by = 3)
# Stochastic process for base years (zero slope)
# stochastic_base <- rnorm(length(base_years), mean = 2, sd = 0.03)
data$OR_measured_every3year <- NA
data$OR_measured_every3year[base_years] <- data$OR_measured_everyyear[base_years]
data$measured_3[base_years] <- T
# Stochastic process for base years (zero slope)
# stochastic_base <- rnorm(length(base_years), mean = 2, sd = 0.03)
data$OR_measured_every3year <- NA
data$OR_measured_every3year[base_years] <- data$OR_measured_everyyear[base_years]
data$measured_3 <- F
data$measured_3[base_years] <- T
View(data)
# Generate declining values
for (start in base_years[-length(base_years)]) {  # Skip the last base year to avoid out-of-bounds
# Generate declining values
decline_years <- (start + 1):(start + 2)
decline_value_1 <- data$OR_measured_every3year[start] - rnorm(1, 0.1, 0.05)
decline_value_2 <- decline_value_1 - rnorm(1, 0.1, 0.05)
data$OR_measured_every3year[decline_years] <- c(decline_value_1, decline_value_2)
}
# Plot the longitudinal data
ggplot(data, aes(x = year, y = OR_measured_every3year)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Simulated Data: AVI Measured every 3 year",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:20)
########## reevaluate every other year ##########
set.seed(123)  # Set seed for reproducibility
########## reevaluate every other year ##########
set.seed(123)  # Set seed for reproducibility
# Parameters
n_years <- 19
base_years <- seq(1, n_years, by = 2)
# Stochastic process for base years (zero slope)
# stochastic_base <- rnorm(length(base_years), mean = 2, sd = 0.03)
data$OR_measured_every2year <- NA
data$OR_measured_every2year[base_years] <- data$OR_measured_everyyear[base_years]
data$measured_2 <- F
data$measured_2[base_years] <- T
# Generate declining values
for (start in base_years[-length(base_years)]) {  # Skip the last base year to avoid out-of-bounds
# Generate declining values
decline_years <- start + 1
decline_value_1 <- data$OR_measured_every2year[start] - rnorm(1, 0.1, 0.05)
data$OR_measured_every2year[decline_years] <- decline_value_1
}
# Plot the longitudinal data
ggplot(data, aes(x = year, y = OR_measured_every2year)) +
geom_line(color = "blue") +
geom_point(color = "blue") +
labs(title = "Simulated Data: AVI Measured every other year",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
long_df <- tidyr::pivot_longer(data,
cols = starts_with("OR"),
names_to = "Measured_interval",
values_to = "OR")
View(long_df)
long_df$Measured_interval <- factor(long_df$Measured_interval, levels = c("OR_measured_everyyear", "OR_measured_every2year", "OR_measured_every3year"))
levels(long_df$Measured_interval) <- c("AVI measured every year", "AVI measured every 2 years", "AVI measured every 3 years")
View(long_df)
long_df$Measured <- ifelse(long_df$Measured_interval == "AVI measured every year", long_df$measured_0,
ifelse(long_df$Measured_interval == "AVI measured every 2 years", long_df$measured_2, long_df$measured_3))
View(long_df)
ggplot(long_df, aes(x = year, y = OR)) +#, color = Measured_interval)) +
geom_line() +
geom_point(aes(color = Measured)) +
facet_wrap(~Measured_interval, ncol = 1) +
labs(title = "Simulated Data: Different AVI measurement intervals",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
#scale_color_manual(values = c("red", "black", "darkgrey")) +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
ggplot(long_df, aes(x = year, y = OR)) +#, color = Measured_interval)) +
geom_line() +
geom_point(aes(color = Measured)) +
facet_wrap(~Measured_interval, ncol = 1) +
labs(title = "Simulated Data: Different AVI measurement intervals",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
scale_color_manual(values = c("red", "black")) +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
ggplot(long_df, aes(x = year, y = OR)) +#, color = Measured_interval)) +
geom_line() +
geom_point(aes(color = Measured)) +
facet_wrap(~Measured_interval, ncol = 1) +
labs(title = "Simulated Data: Different AVI measurement intervals",
x = "Years",
y = "Cumulative OR") +
theme_bw() +
scale_color_manual(values = c("black", "red")) +
ylim(1, 2.2) +
scale_x_continuous(breaks = 1:19)
View(data)
View(long_df)
View(data)
write.csv(data, "/Users/biostat05/Dropbox/2024_03_Peter_survival/simulated.csv")
write.csv(data, "/Users/biostat05/Dropbox/2024_03_Peter_survival/simulated.csv", row.names = F)
require(compareGroups)
require(compareGroups)
smk <- read.csv("/Users/biostat05/Documents/DATA/UKBB/ukb50123/Smoking/datafield20116.csv")
fc_id <- readxl::read_xlsx("/Users/biostat05/Documents/DATA/UKBB/ukb50123/FC_ID.xlsx", sheet = 1)
smk_fc <- smk %>% filter(eid %in% fc_id$`0`)
require(tidyverse)
smk <- read.csv("/Users/biostat05/Documents/DATA/UKBB/ukb50123/Smoking/datafield20116.csv")
fc_id <- readxl::read_xlsx("/Users/biostat05/Documents/DATA/UKBB/ukb50123/FC_ID.xlsx", sheet = 1)
smk_fc <- smk %>% filter(eid %in% fc_id$`0`)
sum(smk_fc$X20116.0.0 %in% c(1,2) & smk_fc$X20116.2.0 == 0)
nrow(smk_fc[smk_fc$X20116.0.0 %in% c(1,2) & smk_fc$X20116.2.0 == 0, ])
nrow(smk_fc[smk_fc$X20116.0.0 == 0 & smk_fc$X20116.2.0 == 0, ])
23735+1223
smk <- read.csv("/Users/biostat05/Dropbox/FC Smoking/ref/current_ID_instance2.csv")
nsmk <- read.csv("/Users/biostat05/Dropbox/FC Smoking/ref/never_ID_instance2.csv")
library(compareGroups)
dat <- read.csv("/Users/biostat05/Dropbox/FC Smoking/FC-smoking/code/currentsmoker_vs_neverandnonsmoker.csv")
table(dat$smk1)
