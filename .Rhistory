data <- read.csv("~/Dropbox/2024_03_Peter_survival/survival_analysis.csv")
data$cn_ad <- ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "Dementia"),
1, 0)
data$mci_ad <- ifelse((data$BL_DIAGNOSIS == "MCI" & data$Final_DIAGNOSIS == "Dementia"),
1, 0)
data$cn_mci <- ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "MCI"),
1, 0)
sum(data$BL_DIAGNOSIS == "MCI" & data$Final_DIAGNOSIS == "Dementia", na.rm = TRUE) / sum(data$BL_DIAGNOSIS == "MCI", na.rm = TRUE)
sum(data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "Dementia", na.rm = TRUE) / sum(data$BL_DIAGNOSIS == "CN", na.rm = TRUE)
sum(data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "MCI", na.rm = TRUE) / sum(data$BL_DIAGNOSIS == "CN", na.rm = TRUE)
surv_results_mci_ad <- data.frame(matrix(nrow = 4, ncol = 6))
predictor_vars
View(data)
install.packages("gtsummary")
########
library(gtsummary)
library(ggplot2)
model <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI, data = subset(data, BL_DIAGNOSIS == "MCI"))
tbl <- tbl_regression(model, exp = TRUE)
tbl
ggforest("model1", data = subset(data, BL_DIAGNOSIS == "MCI"))
ggforest(model1, data = subset(data, BL_DIAGNOSIS == "MCI"))
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI, data = subset(data, BL_DIAGNOSIS == "MCI"))
ggforest(model1, data = subset(data, BL_DIAGNOSIS == "MCI"))
data_filled <- data
View(data_filled)
data_filled_mci_ad <- subset(data, BL_DIAGNOSIS == "MCI")
View(data_filled_mci_ad)
data <- read.csv("~/Dropbox/2024_03_Peter_survival/survival_analysis.csv")
data$cn_ad <- ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "Dementia"),
1, 0)
data$mci_ad <- ifelse((data$BL_DIAGNOSIS == "MCI" & data$Final_DIAGNOSIS == "Dementia"),
1, 0)
View(data)
data <- read.csv("~/Dropbox/2024_03_Peter_survival/survival_analysis.csv")
data$cn_ad <- ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "Dementia"),
1, 0)
data$mci_ad <- ifelse((data$BL_DIAGNOSIS == "MCI" & data$Final_DIAGNOSIS == "Dementia"),
1, 0)
data$cn_mci <- ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "MCI"),
1, 0)
data_filled_mci_ad <- subset(data, BL_DIAGNOSIS == "MCI")
View(data_filled_mci_ad)
View(data)
sum(data$BL_DIAGNOSIS == "MCI" & data$Final_DIAGNOSIS == "Dementia", na.rm = TRUE) / sum(data$BL_DIAGNOSIS == "MCI", na.rm = TRUE)
sum(data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "Dementia", na.rm = TRUE) / sum(data$BL_DIAGNOSIS == "CN", na.rm = TRUE)
sum(data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "MCI", na.rm = TRUE) / sum(data$BL_DIAGNOSIS == "CN", na.rm = TRUE)
# data$cn_ad <- ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "Dementia"),
#                      1, 0)
# data$mci_ad <- ifelse((data$BL_DIAGNOSIS == "MCI" & data$Final_DIAGNOSIS == "Dementia"),
#                      1, 0)
# data$cn_mci <- ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "MCI"),
#                      1, 0)
data$cn_ad <- ifelse(is.na(data$BL_DIAGNOSIS) | is.na(data$Final_DIAGNOSIS), 0,
ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "Dementia"), 1, 0))
# data$cn_ad <- ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "Dementia"),
#                      1, 0)
# data$mci_ad <- ifelse((data$BL_DIAGNOSIS == "MCI" & data$Final_DIAGNOSIS == "Dementia"),
#                      1, 0)
# data$cn_mci <- ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "MCI"),
#                      1, 0)
data$cn_ad <- ifelse(is.na(data$BL_DIAGNOSIS) | is.na(data$Final_DIAGNOSIS), 0,
ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "Dementia"), 1, 0))
data$mci_ad <- ifelse(is.na(data$BL_DIAGNOSIS) | is.na(data$Final_DIAGNOSIS), 0,
ifelse((data$BL_DIAGNOSIS == "MCI" & data$Final_DIAGNOSIS == "Dementia"), 1, 0))
data$cn_mci <- ifelse(is.na(data$BL_DIAGNOSIS) | is.na(data$Final_DIAGNOSIS), 0,
ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "MCI"), 1, 0))
View(data)
sum(data$BL_DIAGNOSIS == "MCI" & data$Final_DIAGNOSIS == "Dementia", na.rm = TRUE) / sum(data$BL_DIAGNOSIS == "MCI", na.rm = TRUE)
sum(data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "Dementia", na.rm = TRUE) / sum(data$BL_DIAGNOSIS == "CN", na.rm = TRUE)
sum(data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "MCI", na.rm = TRUE) / sum(data$BL_DIAGNOSIS == "CN", na.rm = TRUE)
###########################
surv_results_cn_ad <- data.frame(matrix(nrow = 4, ncol = 6))
predictor_vars <- c("ApoE4_additive", "ADNI_AVI", "GMT_ADNI_AVI", "Subcortical_ADNI_AVI")
ind <- 1
for(x in predictor_vars){
formula <- as.formula(paste("Surv(Conversion_time_from_baseline, cn_ad) ~", x, "+ Age"))
model <- coxph(formula, data = subset(data, BL_DIAGNOSIS == "CN"))
surv_results_cn_ad[ind, 2] <- summary(model)$coefficients[1,2]
surv_results_cn_ad[ind, 3] <- summary(model)$coefficients[1,3]
surv_results_cn_ad[ind, 4] <- summary(model)$coefficients[1,5]
surv_results_cn_ad[ind, 1] <- x
surv_results_cn_ad[ind, 5] <- exp(confint(model))[1,1]
surv_results_cn_ad[ind, 6] <- exp(confint(model))[1,2]
ind <- ind + 1
}
names(surv_results_cn_ad) <- c("Predictor", "HR", "SE", "Pr(>|z|)", "Lower_CI", "Upper_CI")
surv_results_cn_ad$Event <- "CN -> AD"
surv_results_mci_ad <- data.frame(matrix(nrow = 4, ncol = 6))
ind <- 1
for(x in predictor_vars){
formula <- as.formula(paste("Surv(Conversion_time_from_baseline, mci_ad) ~", x, "+ Age"))
model <- coxph(formula, data = subset(data, BL_DIAGNOSIS == "MCI"))
surv_results_mci_ad[ind, 2] <- summary(model)$coefficients[1,2]
surv_results_mci_ad[ind, 3] <- summary(model)$coefficients[1,3]
surv_results_mci_ad[ind, 4] <- summary(model)$coefficients[1,5]
surv_results_mci_ad[ind, 1] <- x
surv_results_mci_ad[ind, 5] <- exp(confint(model))[1,1]
surv_results_mci_ad[ind, 6] <- exp(confint(model))[1,2]
ind <- ind + 1
}
names(surv_results_mci_ad) <- c("Predictor", "HR", "SE", "Pr(>|z|)", "Lower_CI", "Upper_CI")
surv_results_mci_ad$Event <- "MCI -> AD"
surv_results_nc_mci <- data.frame(matrix(nrow = 4, ncol = 6))
ind <- 1
for(x in predictor_vars){
formula <- as.formula(paste("Surv(Conversion_time_from_baseline, cn_mci) ~", x, "+ Age"))
model <- coxph(formula, data = subset(data, BL_DIAGNOSIS == "CN"))
surv_results_nc_mci[ind, 2] <- summary(model)$coefficients[1,2]
surv_results_nc_mci[ind, 3] <- summary(model)$coefficients[1,3]
surv_results_nc_mci[ind, 4] <- summary(model)$coefficients[1,5]
surv_results_nc_mci[ind, 1] <- x
surv_results_nc_mci[ind, 5] <- exp(confint(model))[1,1]
surv_results_nc_mci[ind, 6] <- exp(confint(model))[1,2]
ind <- ind + 1
}
names(surv_results_nc_mci) <- c("Predictor", "HR", "SE", "Pr(>|z|)", "Lower_CI", "Upper_CI")
surv_results_nc_mci$Event <- "NC -> MCI"
surv_results <- rbind(surv_results_cn_ad, surv_results_mci_ad, surv_results_nc_mci)
View(surv_results)
data_filled_mci_ad <- subset(data, BL_DIAGNOSIS == "MCI")
View(data_filled_mci_ad)
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI, data = data_filled_mci_ad)
tbl <- tbl_regression(model1, exp = TRUE)
ggforest(model1, data = data_filled_mci_ad)
tbl
range(data_filled_mci_ad$Conversion_time_from_baseline)
range(data_filled_mci_ad$Conversion_time_from_baseline, na.rm = T)
data_filled_mci_ad$Conversion_time_from_baseline <- ifelse(is.na(data_filled_mci_ad$Conversion_time_from_baseline), 12, data_filled_mci_ad$Conversion_time_from_baseline)
View(data_filled_mci_ad)
formula <- as.formula(paste("Surv(Conversion_time_from_baseline, mci_ad) ~", x, "+ ApoE4_additive + Age"))
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI, data = data_filled_mci_ad)
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI, data = data_filled_mci_ad)
tbl <- tbl_regression(model1, exp = TRUE)
tbl
ggforest(model1, data = data_filled_mci_ad)
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + APOE4, data = data_filled_mci_ad)
View(data_filled_mci_ad)
names(data_filled_mci_ad)
data_filled_mci_ad <- subset(data, BL_DIAGNOSIS == "MCI")
#data_filled_mci_ad$Conversion_time_from_baseline <- ifelse(is.na(data_filled_mci_ad$Conversion_time_from_baseline), 12, data_filled_mci_ad$Conversion_time_from_baseline)
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI, data = data_filled_mci_ad)
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + ApoE4_additive, data = data_filled_mci_ad)
tbl_regression(model1, exp = TRUE)
tbl_regression(model2, exp = TRUE)
ggforest(model2, data = data_filled_mci_ad)
model2 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + ApoE4_additive, data = data_filled_mci_ad)
tbl_regression(model1, exp = TRUE)
tbl_regression(model2, exp = TRUE)
ggforest(model1, data = data_filled_mci_ad)
ggforest(model2, data = data_filled_mci_ad)
fcvrs <- read.csv("~/Dropbox/2024_03_Peter_survival/ADNI_framingham_score.csv")
fcvrs <- unique(fcvrs)
fcvrs <- read.csv("~/Dropbox/2024_03_Peter_survival/ADNI_framingham_score.csv")
fcvrs <- read.csv("~/Dropbox/2024_03_Peter_survival/ADNI_framingham_score.csv")
fcvrs <- unique(fcvrs)
data_filled_mci_ad <- subset(data, BL_DIAGNOSIS == "MCI")
data_filled_mci_ad_fscore <- left_join(data_filled_mci_ad, fcvrs, c("SubjID"="ID"))
library(tidyverse)
data_filled_mci_ad_fscore <- left_join(data_filled_mci_ad, fcvrs, c("SubjID"="ID"))
View(data_filled_mci_ad_fscore)
View(data_filled_mci_ad_fscore)
data_filled_mci_ad_fscore <- left_join(data_filled_mci_ad, fcvrs, c("SubjID"="ID")) %>%
drop_na(F_score)
View(data_filled_mci_ad_fscore)
model3 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + F_score, data = data_filled_mci_ad_fscore)
model4 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + F_score + ApoE4_additive, data = data_filled_mci_ad_fscore)
tbl_regression(model3, exp = TRUE)
tbl_regression(model4, exp = TRUE)
ggforest(model1, data = data_filled_mci_ad)
ggforest(model3, data = data_filled_mci_ad)
ggforest(model4, data = data_filled_mci_ad)
ggforest(model3, data = data_filled_mci_ad_fscore)
ggforest(model4, data = data_filled_mci_ad_fscore)
ggforest(model4, data = data_filled_mci_ad_fscore) +
scale_y_discrete(labels = c("ADNI_AVI" = "AVI", "F_score" = "FCVRS", "ApoE4_additive" = "ApoE4"))
ggforest(model4, data = data_filled_mci_ad_fscore) +
scale_y_discrete(labels = c("ADNI_AVI" = "AVI", "F_score" = "FCVRS", "ApoE4_additive" = "ApoE4"))
p <- ggforest(model4, data = data_filled_mci_ad_fscore)
p +
scale_y_discrete(labels = c("ADNI_AVI" = "AVI", "F_score" = "FCVRS", "ApoE4_additive" = "ApoE4"))
p <- ggforest(model4, data = data_filled_mci_ad_fscore)
p$data$name <- factor(p$data$name,
levels = c("ADNI_AVI", "F_score", "ApoE4_additive"),
labels = c("AVI", "FCVRS", "ApoE4"))
p
p$data$name
p <- ggforest(model4, data = data_filled_mci_ad_fscore)
print(levels(p$data$name))
print(levels(p$data$variable))
data_filled_mci_ad_fscore <- data_filled_mci_ad_fscore %>% rename("ADNI_AVI" = "AVI", "F_score" = "FCVRS", "ApoE4_additive" = "ApoE4")
p + titles("MCI -> AD ~ AVI")
p + title("MCI -> AD ~ AVI")
p <- ggforest(model4, data = data_filled_mci_ad_fscore)
p + title("MCI -> AD ~ AVI")
p + ggtitle("MCI -> AD ~ AVI")
p <- ggforest(model4, data = data_filled_mci_ad_fscore)
p + ggtitle("MCI -> AD ~ AVI")
?ggforest
tbl_regression(model1, exp = TRUE)
tbl_regression(model2, exp = TRUE)
tbl_regression(model3, exp = TRUE)
tbl_regression(model4, exp = TRUE)
?tbl_regression
tbl_regression(model1, exp = TRUE)
tb1 <- tbl_regression(model1, exp = TRUE)
write_gt(as_gt(tb1), path = "~/Dropbox/2024_03_Peter_survival/model1.xlsx", format = "xlsx")
?write_gt
??write_gt
gtsave(as_gt(tb1), path = "~/Dropbox/2024_03_Peter_survival/model1.doc")
gt::gtsave(as_gt(tb1), path = "~/Dropbox/2024_03_Peter_survival/model1.doc")
gt::gtsave(as_gt(tb1), filename = "~/Dropbox/2024_03_Peter_survival/model1.doc")
gt::gtsave(as_gt(tb1), filename = "~/Dropbox/2024_03_Peter_survival/model1.docx")
gt::gtsave(as_gt(tbl_regression(model1, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model1.docx")
#data_filled_mci_ad$Conversion_time_from_baseline <- ifelse(is.na(data_filled_mci_ad$Conversion_time_from_baseline), 12, data_filled_mci_ad$Conversion_time_from_baseline)
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI, data = data_filled_mci_ad)
model2 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + ApoE4_additive, data = data_filled_mci_ad)
model3 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + F_score, data = data_filled_mci_ad_fscore)
model4 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + F_score + ApoE4_additive, data = data_filled_mci_ad_fscore)
tb1 <- tbl_regression(model1, exp = TRUE)
gt::gtsave(as_gt(tbl_regression(model1, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model1.docx")
gt::gtsave(as_gt(tbl_regression(model3, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model3.docx")
gt::gtsave(as_gt(tbl_regression(model4, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model3.docx")
gt::gtsave(as_gt(tbl_regression(model4, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model4.docx")
gt::gtsave(as_gt(tbl_regression(model3, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model3.docx")
?tbl_regression
p <- ggforest(model4, data = data_filled_mci_ad_fscore)
p
p <- ggforest(model4, data = data_filled_mci_ad_fscore,
main = "Harzard ratio, MCI_AD_conversion ~ AVI + APOE4 + FCVRS")
p
p <- ggforest(model4, data = data_filled_mci_ad_fscore,
main = "Harzard ratio (MCI_AD_conversion ~ AVI + APOE4 + FCVRS)")
p
names(data_filled_mci_ad)
#data_filled_mci_ad$Conversion_time_from_baseline <- ifelse(is.na(data_filled_mci_ad$Conversion_time_from_baseline), 12, data_filled_mci_ad$Conversion_time_from_baseline)
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + Age, data = data_filled_mci_ad)
tbl_regression(model1, exp = TRUE)
model2 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + ApoE4_additive + Age, data = data_filled_mci_ad)
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + Age, data = data_filled_mci_ad)
model2 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + ApoE4_additive + Age, data = data_filled_mci_ad)
model3 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + F_score + Age, data = data_filled_mci_ad_fscore)
model4 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + F_score + ApoE4_additive + Age, data = data_filled_mci_ad_fscore)
# tbl_regression(model1, exp = TRUE)
# tbl_regression(model2, exp = TRUE)
# tbl_regression(model3, exp = TRUE)
# tbl_regression(model4, exp = TRUE)
gt::gtsave(as_gt(tbl_regression(model1, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model1.docx")
names(data_filled_mci_ad_fscore)
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + Age, data = data_filled_mci_ad)
model2 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + ApoE4_additive + Age, data = data_filled_mci_ad)
model3 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + F_score + Age.x, data = data_filled_mci_ad_fscore)
model4 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + F_score + ApoE4_additive + Age.x, data = data_filled_mci_ad_fscore)
# tbl_regression(model1, exp = TRUE)
# tbl_regression(model2, exp = TRUE)
# tbl_regression(model3, exp = TRUE)
# tbl_regression(model4, exp = TRUE)
gt::gtsave(as_gt(tbl_regression(model1, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model1.docx")
gt::gtsave(as_gt(tbl_regression(model2, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model2.docx")
gt::gtsave(as_gt(tbl_regression(model3, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model3.docx")
gt::gtsave(as_gt(tbl_regression(model4, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model4.docx")
?left_join
overlapping_cols <- intersect(names(data_filled_mci_ad), names(fcvrs))
data_filled_mci_ad_fscore <- left_join(data_filled_mci_ad, fcvrs, c("SubjID"="ID")) %>%
drop_na(F_score) %>%
select(-one_of(paste0(overlapping_cols[overlapping_cols != "ID"], ".y")))
View(data_filled_mci_ad_fscore)
data_filled_mci_ad_fscore <- left_join(data_filled_mci_ad, fcvrs, c("SubjID"="ID")) %>%
drop_na(F_score) %>%
rename("Age" = "Age.x")
data_filled_mci_ad <- subset(data, BL_DIAGNOSIS == "MCI")
data_filled_mci_ad_fscore <- left_join(data_filled_mci_ad, fcvrs, c("SubjID"="ID")) %>%
drop_na(F_score) %>%
rename("Age" = "Age.x")
model1 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + Age, data = data_filled_mci_ad)
model2 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + ApoE4_additive + Age, data = data_filled_mci_ad)
model3 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + F_score + Age, data = data_filled_mci_ad_fscore)
model4 <- coxph(Surv(Conversion_time_from_baseline, mci_ad) ~ ADNI_AVI + F_score + ApoE4_additive + Age, data = data_filled_mci_ad_fscore)
# tbl_regression(model1, exp = TRUE)
# tbl_regression(model2, exp = TRUE)
# tbl_regression(model3, exp = TRUE)
# tbl_regression(model4, exp = TRUE)
gt::gtsave(as_gt(tbl_regression(model1, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model1.docx")
gt::gtsave(as_gt(tbl_regression(model2, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model2.docx")
gt::gtsave(as_gt(tbl_regression(model3, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model3.docx")
gt::gtsave(as_gt(tbl_regression(model4, exp = TRUE)), filename = "~/Dropbox/2024_03_Peter_survival/model4.docx")
ggforest(model1, data = data_filled_mci_ad)
p <- ggforest(model4, data = data_filled_mci_ad_fscore,
main = "Harzard ratio (MCI_AD_conversion ~ AVI + APOE4 + FCVRS + baseline age)")
p
# predictors
data <- read.csv("~/Dropbox/2024_03_Peter_survival/survival_analysis.csv")
data$cn_ad <- ifelse(is.na(data$BL_DIAGNOSIS) | is.na(data$Final_DIAGNOSIS), 0,
ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "Dementia"), 1, 0))
data$mci_ad <- ifelse(is.na(data$BL_DIAGNOSIS) | is.na(data$Final_DIAGNOSIS), 0,
ifelse((data$BL_DIAGNOSIS == "MCI" & data$Final_DIAGNOSIS == "Dementia"), 1, 0))
data$cn_mci <- ifelse(is.na(data$BL_DIAGNOSIS) | is.na(data$Final_DIAGNOSIS), 0,
ifelse((data$BL_DIAGNOSIS == "CN" & data$Final_DIAGNOSIS == "MCI"), 1, 0))
data <- unique(data)
ggplot(data = data, aes(x = Conversion_time_from_baseline, y = ADNI_AVI)) + geom_smooth() + geom_point() + theme_bw()
fcvrs <- read.csv("/Users/biostat05/Dropbox/2024_03_Peter_survival/ADNI_framingham_score.csv")
#fcvrs[duplicated(fcvrs$ID) | duplicated(fcvrs$ID, fromLast = TRUE), ]
fcvrs <- unique(fcvrs)
raw <- read.csv("/Users/biostat05/Dropbox/2024_03_Peter_survival/ANDI_z.norm.resid.csv")
raw <- unique(raw)
variables <- left_join(data, fcvrs, c("SubjID"="ID")) %>%
left_join(raw, c("SubjID"="ID"))
variables <- variables[,c(3,5,6,8,9,7,20:61)]
# results_newcase <- data.frame(matrix(NA, ncol = 88, nrow = 12))]
results_newcase <- list()
# results_newcase <- data.frame(matrix(NA, ncol = 88, nrow = 12))]
results_newcase <- list()
for (i in 1:44){
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
poi <- names(variables)[4+i]
for (t in time_points) {
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
samplen <- nrow(subset_data)
# Fit logistic regression model
formula <- as.formula(paste0("event ~ ", poi, "+ Age.x"))
model <- glm(formula, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[[poi]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n = samplen))
}
results_newcase[[i]] <- results
names(results_newcase)[i] <- poi
}
combined_newcase <- do.call(rbind, results_newcase)
combined_newcase$predictor <- rownames(combined_newcase)
combined_newcase$predictor <- gsub("\\..*", "", combined_newcase$predictor)
rownames(combined_newcase) <- NULL
### whole brain RVI + APOE + FCVRS
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
for (t in time_points) {
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
#n_newcase <- sum(subset_data$event == 1)
samplen <- nrow(subset_data)
# Fit logistic regression model
#formula <- as.formula(paste0("event ~ ", poi, "+ Age.x"))
model <- glm(event ~ ADNI_AVI + ApoE4_additive + F_score + Age.x, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n = samplen))
}
results$predictor <- "ADNI_AVI + APOE + FCVRS"
combined_newcase <- rbind(combined_newcase, results)
write.csv(combined_newcase, "~/Dropbox/2024_03_Peter_survival/oddsratio_newcase_20240610.csv", row.names = F)
View(combined_newcase)
?complete.cases
### whole brain RVI + APOE + FCVRS
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
for (t in time_points) {
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
#n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
#formula <- as.formula(paste0("event ~ ", poi, "+ Age.x"))
model <- glm(event ~ ADNI_AVI + ApoE4_additive + F_score + Age.x, data = subset_data, family = "binomial")
samplen <- nobs(model)
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n = samplen))
}
results$predictor <- "ADNI_AVI + APOE + FCVRS"
combined_newcase <- rbind(combined_newcase, results)
write.csv(combined_newcase, "~/Dropbox/2024_03_Peter_survival/oddsratio_newcase_20240610.csv", row.names = F)
View(combined_newcase)
# results_newcase <- data.frame(matrix(NA, ncol = 88, nrow = 12))]
results_newcase <- list()
# results_newcase <- data.frame(matrix(NA, ncol = 88, nrow = 12))]
results_newcase <- list()
for (i in 1:44){
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
poi <- names(variables)[4+i]
for (t in time_points) {
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
# Fit logistic regression model
formula <- as.formula(paste0("event ~ ", poi, "+ Age.x"))
model <- glm(formula, data = subset_data, family = "binomial")
samplen <- nobs(model)
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[[poi]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n = samplen))
}
results_newcase[[i]] <- results
names(results_newcase)[i] <- poi
}
combined_newcase <- do.call(rbind, results_newcase)
combined_newcase$predictor <- rownames(combined_newcase)
combined_newcase$predictor <- gsub("\\..*", "", combined_newcase$predictor)
rownames(combined_newcase) <- NULL
### whole brain RVI + APOE + FCVRS
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
for (t in time_points) {
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
#n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
#formula <- as.formula(paste0("event ~ ", poi, "+ Age.x"))
model <- glm(event ~ ADNI_AVI + ApoE4_additive + F_score + Age.x, data = subset_data, family = "binomial")
samplen <- nobs(model)
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n = samplen))
}
results$predictor <- "ADNI_AVI + APOE + FCVRS"
combined_newcase <- rbind(combined_newcase, results)
write.csv(combined_newcase, "~/Dropbox/2024_03_Peter_survival/oddsratio_newcase_20240610.csv", row.names = F)
View(combined_newcase)
# results_newcase <- data.frame(matrix(NA, ncol = 88, nrow = 12))]
results_newcase <- list()
for (i in 1:44){
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
poi <- names(variables)[4+i]
for (t in time_points) {
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
formula <- as.formula(paste0("event ~ ", poi, "+ Age.x"))
model <- glm(formula, data = subset_data, family = "binomial")
samplen <- nobs(model)
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[[poi]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n_all = samplen, n_newcase = n_newcase))
}
results_newcase[[i]] <- results
names(results_newcase)[i] <- poi
}
##### cumu
results_cumu <- list()
combined_newcase <- do.call(rbind, results_newcase)
combined_newcase$predictor <- rownames(combined_newcase)
combined_newcase$predictor <- gsub("\\..*", "", combined_newcase$predictor)
rownames(combined_newcase) <- NULL
### whole brain RVI + APOE + FCVRS
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
for (t in time_points) {
subset_data <- variables %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
#formula <- as.formula(paste0("event ~ ", poi, "+ Age.x"))
model <- glm(event ~ ADNI_AVI + ApoE4_additive + F_score + Age.x, data = subset_data, family = "binomial")
samplen <- nobs(model)
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n_all = samplen, n_newcase = n_newcase))
}
results$predictor <- "ADNI_AVI + APOE + FCVRS"
combined_newcase <- rbind(combined_newcase, results)
write.csv(combined_newcase, "~/Dropbox/2024_03_Peter_survival/oddsratio_newcase_20240610.csv", row.names = F)
View(combined_newcase)
library(MASS)
data("cars")
?cars
?sim
View(sim)
setwd("~/Dropbox/2024_03_SCFA_package/SCFA")
devtools::document()
devtools::load_all()
?sim
rm(list = ls())
setwd("~/Dropbox/2024_03_SCFA_package/SCFA")
devtools::document()
devtools::load_all()
