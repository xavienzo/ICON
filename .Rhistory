dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
model <- glm(event ~ ADNI_AVI, data = subset_data, family = "binomial")
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, n_newcase = n_newcase))
}
p1 <- ggplot(data = results, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "New cases") +
theme_bw()
results_cumu <- data.frame(time_years = numeric(), odds_ratio = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
for (t in time_points) {
# Subset data for the specific time point
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
# Fit logistic regression model
model <- glm(event ~ ADNI_AVI, data = subset_data, family = "binomial")
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results_cumu <- rbind(results_cumu, data.frame(time_years = t, odds_ratio = odds_ratio))
}
p2 <- ggplot(data = results_cumu, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "Cumulative") +
theme_bw()
gridExtra::grid.arrange(p1, p2)
### year-to-year survival
# adni_avi
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), n_newcase = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
for (t in time_points) {
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
model <- glm(event ~ ADNI_AVI + Age, data = subset_data, family = "binomial")
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, n_newcase = n_newcase))
}
p1 <- ggplot(data = results, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "New cases") +
theme_bw()
View(results)
results_cumu <- data.frame(time_years = numeric(), odds_ratio = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
for (t in time_points) {
# Subset data for the specific time point
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
# Fit logistic regression model
model <- glm(event ~ ADNI_AVI + Age, data = subset_data, family = "binomial")
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results_cumu <- rbind(results_cumu, data.frame(time_years = t, odds_ratio = odds_ratio))
}
p2 <- ggplot(data = results_cumu, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "Cumulative") +
theme_bw()
gridExtra::grid.arrange(p1, p2)
View(subset_data)
#gmt
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), n_newcase = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
for (t in time_points) {
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
model <- glm(event ~ GMT_ADNI_AVI + Age, data = subset_data, family = "binomial")
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["GMT_ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, n_newcase = n_newcase))
}
p1 <- ggplot(data = results, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "New cases") +
theme_bw()
results_cumu <- data.frame(time_years = numeric(), odds_ratio = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
for (t in time_points) {
# Subset data for the specific time point
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
# Fit logistic regression model
model <- glm(event ~ GMT_ADNI_AVI + Age, data = subset_data, family = "binomial")
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["GMT_ADNI_AVI"]])
# Store results
results_cumu <- rbind(results_cumu, data.frame(time_years = t, odds_ratio = odds_ratio))
}
p2 <- ggplot(data = results_cumu, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "Cumulative") +
theme_bw()
gridExtra::grid.arrange(p1, p2)
#subcort
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), n_newcase = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
for (t in time_points) {
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
model <- glm(event ~ Subcortical_ADNI_AVI + Age, data = subset_data, family = "binomial")
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["Subcortical_ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, n_newcase = n_newcase))
}
p1 <- ggplot(data = results, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "New cases") +
theme_bw()
results_cumu <- data.frame(time_years = numeric(), odds_ratio = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
for (t in time_points) {
# Subset data for the specific time point
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
# Fit logistic regression model
model <- glm(event ~ Subcortical_ADNI_AVI + Age, data = subset_data, family = "binomial")
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["Subcortical_ADNI_AVI"]])
# Store results
results_cumu <- rbind(results_cumu, data.frame(time_years = t, odds_ratio = odds_ratio))
}
p2 <- ggplot(data = results_cumu, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "Cumulative") +
theme_bw()
gridExtra::grid.arrange(p1, p2)
View(results)
newcase <- results[,c(1,3)]
View(newcase)
ggplot(data = newcase, aes(x = time_years, y = n_newcase)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "Cumulative") +
theme_bw()
ggplot(data = newcase, aes(x = time_years, y = n_newcase)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "N. of new cases") +
theme_bw()
# Fit logistic regression model
model <- glm(event ~ ADNI_AVI + Age, data = subset_data, family = "binomial")
coef(model)
summary(model)$p.value
summary(model)$estimates
summary(model)$estimate
summary(model)
summary(model)$coefficients[,4]
p <- summary(model)$coefficients[2,4]
### year-to-year survival
# adni_avi
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric(), n_newcase = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
for (t in time_points) {
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
model <- glm(event ~ ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n_newcase = n_newcase))
}
View(results)
2.402013e-01
# Fit logistic regression model
model <- glm(event ~ ADNI_AVI + Age, data = subset_data, family = "binomial")
summary(model)$coefficients
p <- summary(model)$coefficients[2,4]
### year-to-year survival
# adni_avi
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric(), n_newcase = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
for (t in time_points) {
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
model <- glm(event ~ ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n_newcase = n_newcase))
}
p1 <- ggplot(data = results, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "New cases") +
theme_bw()
View(results)
results_cumu <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
for (t in time_points) {
# Subset data for the specific time point
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
# Fit logistic regression model
model <- glm(event ~ ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results_cumu <- rbind(results_cumu, data.frame(time_years = t, odds_ratio = odds_ratio, p = p))
}
p2 <- ggplot(data = results_cumu, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "Cumulative") +
theme_bw()
gridExtra::grid.arrange(p1, p2)
View(results_cumu)
#gmt
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric(), n_newcase = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
for (t in time_points) {
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
model <- glm(event ~ GMT_ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["GMT_ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n_newcase = n_newcase))
}
p1 <- ggplot(data = results, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "New cases") +
theme_bw()
results_cumu <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
for (t in time_points) {
# Subset data for the specific time point
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
# Fit logistic regression model
model <- glm(event ~ GMT_ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["GMT_ADNI_AVI"]])
# Store results
results_cumu <- rbind(results_cumu, data.frame(time_years = t, odds_ratio = odds_ratio, p = p))
}
View(results)
1.392661e-03
View(results_cumu)
#subcort
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric(), n_newcase = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
for (t in time_points) {
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
model <- glm(event ~ Subcortical_ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["Subcortical_ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n_newcase = n_newcase))
}
p1 <- ggplot(data = results, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "New cases") +
theme_bw()
results_cumu <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
for (t in time_points) {
# Subset data for the specific time point
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
# Fit logistic regression model
model <- glm(event ~ Subcortical_ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["Subcortical_ADNI_AVI"]])
# Store results
results_cumu <- rbind(results_cumu, data.frame(time_years = t, odds_ratio = odds_ratio, p = p))
}
p2 <- ggplot(data = results_cumu, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "Cumulative") +
theme_bw()
View(results)
View(results_cumu)
### year-to-year survival
# adni_avi
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric(), n_newcase = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
for (t in time_points) {
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
model <- glm(event ~ ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n_newcase = n_newcase))
}
p1 <- ggplot(data = results, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "New cases") +
theme_bw()
results_cumu <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
for (t in time_points) {
# Subset data for the specific time point
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
# Fit logistic regression model
model <- glm(event ~ ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["ADNI_AVI"]])
# Store results
results_cumu <- rbind(results_cumu, data.frame(time_years = t, odds_ratio = odds_ratio, p = p))
}
p2 <- ggplot(data = results_cumu, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "Cumulative") +
theme_bw()
gridExtra::grid.arrange(p1, p2)
View(results)
View(results_cumu)
View(results)
or <- cbind(results[,c(1:3)], results_cumu[,c(1:2)])
View(or)
or <- cbind(results[,c(1:3)], results_cumu[,c(2:3)])
View(or)
#gmt
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric(), n_newcase = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
for (t in time_points) {
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
model <- glm(event ~ GMT_ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["GMT_ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n_newcase = n_newcase))
}
p1 <- ggplot(data = results, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "New cases") +
theme_bw()
results_cumu <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
for (t in time_points) {
# Subset data for the specific time point
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
# Fit logistic regression model
model <- glm(event ~ GMT_ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["GMT_ADNI_AVI"]])
# Store results
results_cumu <- rbind(results_cumu, data.frame(time_years = t, odds_ratio = odds_ratio, p = p))
}
p2 <- ggplot(data = results_cumu, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "Cumulative") +
theme_bw()
gridExtra::grid.arrange(p1, p2)
View(results)
or <- cbind(or, results[,c(2:3)], results_cumu[,c(2:3)])
View(or)
#subcort
results <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric(), n_newcase = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
time_points <- seq(as.integer(min(subset_data$Conversion_time_from_baseline, na.rm = T)), as.integer(max(subset_data$Conversion_time_from_baseline, na.rm = T)), by = 1) + 1
for (t in time_points) {
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI" & (Conversion_time_from_baseline > (t - 1) | is.na(Conversion_time_from_baseline)))
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Conversion_time_from_baseline > (t - 1) & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
n_newcase <- sum(subset_data$event == 1)
# Fit logistic regression model
model <- glm(event ~ Subcortical_ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["Subcortical_ADNI_AVI"]])
# Store results
results <- rbind(results, data.frame(time_years = t, odds_ratio = odds_ratio, p = p, n_newcase = n_newcase))
}
p1 <- ggplot(data = results, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "New cases") +
theme_bw()
results_cumu <- data.frame(time_years = numeric(), odds_ratio = numeric(), p = numeric())
subset_data <- data %>%
dplyr::filter(BL_DIAGNOSIS == "MCI")
for (t in time_points) {
# Subset data for the specific time point
subset_data$event <- ifelse(is.na(subset_data$Conversion_time_from_baseline), 0, ifelse(subset_data$Conversion_time_from_baseline <= t & subset_data$Final_DIAGNOSIS == "Dementia", 1, 0))
# Fit logistic regression model
model <- glm(event ~ Subcortical_ADNI_AVI + Age, data = subset_data, family = "binomial")
p <- summary(model)$coefficients[2,4]
# Extract odds ratio for AVI
odds_ratio <- exp(coef(model)[["Subcortical_ADNI_AVI"]])
# Store results
results_cumu <- rbind(results_cumu, data.frame(time_years = t, odds_ratio = odds_ratio, p = p))
}
p2 <- ggplot(data = results_cumu, aes(x = time_years, y = odds_ratio)) +
geom_line() +
scale_x_continuous(breaks = pretty(results$time_years)) +
labs(x = "Years", y = "Odds ratio", title = "Cumulative") +
theme_bw()
gridExtra::grid.arrange(p1, p2)
or <- cbind(or, results[,c(2:3)], results_cumu[,c(2:3)])
View(or)
View(or)
View(or)
names(or) <- c("year", "OR_AVI_newcase", "P_AVI_newcase",
"OR_AVI_cumulative", "P_AVI_cumulative",
"OR_GMT_newcase", "P_GMT_newcase",
"OR_GMT_cumulative", "P_GMT_cumulative",
"OR_subcort_newcase", "P_subcort_newcase",
"OR_subcort_cumulative", "P_subcort_cumulative")
View(or)
write.csv(or, "~/Dropbox/2024_03_Peter_survival/oddsratio.csv", row.names = F)
table1 <- dat %>%
left_join(age, "eid") %>%
left_join(sex, "eid") %>%
left_join(race, "eid") %>%
left_join(education, "eid") %>%
left_join(bmi, "eid") %>%
left_join(dbp, "eid") %>%
left_join(sbp, "eid") %>%
left_join(headmotion, "eid")
library(tidyverse)
dat <- read.csv("/Users/biostat05/Dropbox/FC Smoking/FC-smoking/code/currentsmoker_vs_neverandnonsmoker.csv")
table(dat$smk1)
table1 <- dat %>%
left_join(age, "eid") %>%
left_join(sex, "eid") %>%
left_join(race, "eid") %>%
left_join(education, "eid") %>%
left_join(bmi, "eid") %>%
left_join(dbp, "eid") %>%
left_join(sbp, "eid") %>%
left_join(headmotion, "eid")
nononly <- read.csv("/Users/biostat05/Dropbox/FC Smoking/FC-smoking/code/currentsmoker_vs_nonsmoker.csv")
table(nononly$smk2)
